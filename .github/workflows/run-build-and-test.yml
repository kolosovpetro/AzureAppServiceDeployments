name: Run Build and Test

on:
  push:
    branches:
      - master
      - develop

  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-test-dotnet:
    name: Run Build and Test .NET
    runs-on: ubuntu-latest

    env:
      Configuration: 'Release'
      ProjectPath: 'AzureAppServiceDeployments/AzureAppServiceDeployments.csproj'
      OutputPath: 'outputs/src'


    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '6.x'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v3.2.1
#        with:
#          updateAssemblyInfo: true
#          updateAssemblyInfoFilename: 'WebApp/Properties/AssemblyInfo.cs'

      - name: Setup .NET 6.0 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Transform appsettings.json
        uses: microsoft/variable-substitution@v1
        with:
          files: 'AzureAppServiceDeployments/appsettings.json'
        env:
          ConfigExample.ConnectionString: ${{ secrets.DATABASE_URL }}
          ConfigExample.BlobConnectionString: ${{ secrets.BLOB_URL }}
          ConfigExample.JwtSignGuid: ${{ secrets.JWT_SIGN_KEY }}
          ConfigExample.EmailServiceApiKey: ${{ secrets.EMAIL_SERVICE_API_KEY }}

      - name: Restore Nuget Packages
        run: dotnet restore

      - name: Build .NET Solution
        run: |
          dotnet build *.sln --no-restore /p:ContinuousIntegrationBuild=true --configuration $Configuration

      - name: Run .NET Publish
        run: |
          dotnet publish $ProjectPath --configuration $Configuration --output $OutputPath --no-build

      - name: Drop Artifact
        uses: actions/upload-artifact@v4
        with:
          name: drop
          path: ${{ env.OutputPath }}

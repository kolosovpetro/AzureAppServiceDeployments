name: Deploy App Service

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  workflow_dispatch:

env:
  Configuration: 'Release'
  ProjectPath: 'AzureAppServiceDeployments/AzureAppServiceDeployments.csproj'
  OutputPath: 'publish/out'
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  build-test:
    name: Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '5.x'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v3.2.1

      - name: Setup .NET 6.x SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x

      - name: Transform appsettings.json
        uses: devops-actions/variable-substitution@v1.2
        with:
          files: 'AzureAppServiceDeployments/appsettings.json'
        env:
          Config.ConnectionString: ${{ secrets.DATABASE_URL }}
          Config.BlobConnectionString: ${{ secrets.BLOB_URL }}
          Config.JwtSignGuid: ${{ secrets.JWT_SIGN_KEY }}
          Config.EmailServiceApiKey: ${{ secrets.EMAIL_SERVICE_API_KEY }}
          Config.Version: ${{ env.GitVersion_SemVer }}
          Config.DeployedFromCiAgent: 'GitHub Actions'

      - name: Restore Nuget Packages
        run: dotnet restore

      - name: Build .NET Solution
        run: |
          dotnet build *.sln --no-restore /p:ContinuousIntegrationBuild=true --configuration $Configuration

      - name: Run .NET Publish
        run: |
          dotnet publish $ProjectPath --configuration $Configuration --output $OutputPath --no-build

      - name: Drop Artifact
        uses: actions/upload-artifact@v4
        with:
          name: drop
          path: ${{ env.OutputPath }}

  deploy-windows:
    needs: [ build-test ]
    name: Deploy App Service Windows
    runs-on: ubuntu-latest

    environment:
      name: windows

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: drop
          path: ${{ env.OutputPath }}

      - name: Deploy App Service Windows
        uses: azure/webapps-deploy@v2
        with:
          app-name: ase-windows-d01
          publish-profile: ${{ secrets.AZURE_WEBAPP_WINDOWS_PUBLISH_PROFILE }}
          package: ${{ env.OutputPath }}

  deploy-linux:
    needs: [ build-test ]
    name: Deploy App Service Linux
    runs-on: ubuntu-latest

    environment:
      name: linux

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: drop
          path: ${{ env.OutputPath }}

      - name: Deploy App Service Linux
        uses: azure/webapps-deploy@v2
        with:
          app-name: ase-linux-d01
          publish-profile: ${{ secrets.AZURE_WEBAPP_LINUX_PUBLISH_PROFILE }}
          package: ${{ env.OutputPath }}
